services:
  mtproxy:
    build: .
    container_name: mtproxy_stable
    restart: unless-stopped
    
    # Use port mapping instead of host networking for macOS compatibility
    ports:
      - "${MTPROTO_PORT:-8080}:${MTPROTO_PORT:-8080}"
    
    # Load configuration directly from the .env file
    env_file:
      - .env
    
    # Security hardening (relaxed for performance)
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=200m
    
    # Resource limits optimized for 1 vCPU / 2GB RAM servers
    deploy:
      resources:
        limits:
          memory: 1.5G  # Leave 500MB for system
          cpus: '0.8'   # Leave 20% CPU for system
        reservations:
          memory: 128M
          cpus: '0.1'
    
    # Optimized health check
    healthcheck:
      test: ["CMD", "python3", "-c", "import socket; s=socket.socket(); s.settimeout(1); s.connect(('127.0.0.1', 8080)); s.close()"]
      interval: 15s
      timeout: 3s
      retries: 2
      start_period: 10s
    
    # Minimal logging for performance
    logging:
      driver: json-file
      options:
        max-size: "2m"
        max-file: "2"
    
    # Note: sysctls removed for macOS compatibility
    # These will be applied via the optimization script on Linux servers 